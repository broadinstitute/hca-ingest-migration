name: PR Validation for Main Branch
on:
  pull_request:
    branches:
      - main
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true
jobs:
  pr-validation:
    name: PR Validation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          # This is the service account key for the hca-test-runner 1d445
          credentials_json: '${{ secrets.HCA_GCP_TEST_SA_KEY }}'
#        env:
#          GCP_TEST_KEY: '${{ secrets.HCA_GCP_TEST_SA_KEY }}'
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2.0.0'
        with:
          version: '>= 416.0.0'
          project_id: '${{ secrets.DEV_PROJECT_ID }}'
      - name: Set up Python 3.9 for dataflow tests
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 2.0.1
      - name: Restore cache dependencies
        uses: actions/cache@v4
        env:
          cache-name: cache-poetry-v2
        with:
          path: ~/.cache/pypoetry
          # key uses pyproject.toml hash, so it's unique to each version of pyproject.toml
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('./orchestration/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        run: poetry install
        working-directory: ${{ github.workspace }}/orchestration
      - uses: sbt/setup-sbt@v1
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '8'
          check-latest: 'true'
          # 'commit-${{ github.sha }}-job-${{ github.run_id }}-sbt-cache'
          cache: 'sbt'
      - name: Check Scala formatting
        run: sbt scalafmtCheckAll
      - name: Scala Compile
        run: sbt Compile/compile Test/compile IntegrationTest/compile
      - name: Scala Test
        run: sbt "set ThisBuild/coverageEnabled := true" test IntegrationTest/test coverageAggregate
      - name: Publish Scala Test coverage
        uses: codecov/codecov-action@v1
# We are skipping the E2E tests during PR validation until we refactor to test against TDR prod
# See FE-203 and FE-204 for complete details
# See the e2e README for instructions to run the tests locally (orchestration/hca_orchestration/tests/e2e/README.md)
#      - name: Run E2E test suite
#        run: poetry run pytest -v -m e2e
#        working-directory: ${{ github.workspace }}/orchestration
